---

- name: Make sure required packages are in place
  package:
    name: '{{ item }}'
    state: 'present'
  with_flattened:
    - '{{ apt_packages }}'

- name: Install pip package
  pip:
    name: psycopg2
    state: 'present'

- name: Set postgres trust for localhost connections
  lineinfile:
    dest: /etc/postgresql/9.6/main/pg_hba.conf
    regexp: '^local\s+all\s+postgres'
    line: 'local   all             postgres                                trust'

- name: Restart postgresql
  service: name=postgresql state=restarted

- name: Make sure required users for postgres db are in place
  postgresql_user:
    name: '{{ item.name }}'
    password: '{{ item.password }}'
    role_attr_flags: CREATEDB,NOSUPERUSER
  with_flattened:
    - '{{ postgres_users }}'

- name: Create database for appliaction
  postgresql_db:
    name: '{{ postgres_db_name }}'
    encoding: UTF-8
    owner: '{{ postgres_db_user }}'


- name: Create deployers group
  group:
    name: deployers
    state: present

- name: Make sure there is a gitlab_deploy user
  user:
    name: gitlab_deploy
    comment: "Gitlab deploy user"
    groups: sudo,deployers
    shell: /bin/bash
    state: present

- name: Ensure .ssh folder for gitlab_deploy user
  file:
    path: '~gitlab_deploy/.ssh'
    state: directory
    owner: gitlab_deploy
    group: gitlab_deploy
    mode: 0700

- name: Copy public key for deploy user
  copy:
    content: '{{gitlab_pub_key}}'
    dest: ~gitlab_deploy/.ssh/authorized_keys
    owner: gitlab_deploy
    group: gitlab_deploy
    mode: 0644

- name: Copy public key for deploy user
  copy:
    content: '{{gitlab_priv_key}}'
    dest: ~gitlab_deploy/.ssh/id_rsa
    owner: gitlab_deploy
    group: gitlab_deploy
    mode: 0600

- name: Ensure rails applications main folder
  file:
    path: /srv
    state: directory
    owner: root
    group: root

- name: Ensure rails application folder
  file:
    path: /srv/{{rails_app_name}}/shared/config
    state: directory
    owner: gitlab_deploy
    group: gitlab_deploy

- name: Create default database config for rails app
  template:
    src: templates/pg_database.yml.j2
    dest: /srv/{{rails_app_name}}/shared/config/database.yml
    owner: gitlab_deploy
    group: gitlab_deploy

- name: Create default unicorn config
  template:
    src: templates/unicorn.rb.j2
    dest: /srv/{{rails_app_name}}/shared/config/unicorn.rb
    owner: gitlab_deploy
    group: gitlab_deploy

- name: Create secrets file
  template:
    src: templates/secrets.yml.j2
    dest: /srv/{{rails_app_name}}/shared/config/secrets.yml
    owner: gitlab_deploy
    group: gitlab_deploy

- name: Create egov_utils config file
  template:
    src: templates/config.yml.j2
    dest: /srv/{{rails_app_name}}/shared/config/config.yml
    owner: gitlab_deploy
    group: gitlab_deploy

- name: Create nginx config file
  template:
    src: templates/nginx_site.j2
    dest: /etc/nginx/sites-available/{{rails_app_name}}

- name: Disable default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Enable nginx site
  file:
    path: /etc/nginx/sites-enabled/{{rails_app_name}}
    src: /etc/nginx/sites-available/{{rails_app_name}}
    state: link

- name: Restart nginx
  service: name=nginx state=restarted

- name: Set proxy in .gemrc
  file:
    src: templates/gemrc.j2
    dest: ~gitlab_deploy/.gemrc
    owner: gitlab_deploy
    group: gitlab_deploy
  when: http_proxy is defined
